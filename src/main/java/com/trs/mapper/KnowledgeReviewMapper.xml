<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trs.mapper.KnowledgeReviewMapper" >
  <resultMap id="BaseResultMap" type="com.trs.model.KnowledgeReview" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="manager" property="manager" jdbcType="VARCHAR" />
    <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="examine_date" property="examineDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.trs.model.KnowledgeReviewWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="text" property="text" jdbcType="LONGVARCHAR" />
    <result column="lcoation" property="lcoation" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, create_user, manager, knowledge_name, create_date, examine_date, status, ip
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    text, lcoation
  </sql>

  <sql id="sql_where">
    <where>
      <if test="search != null and search !=''">
        knowledge_name LIKE "%"#{search}"%"
      </if>
      <if test="status != ''and status !=null">
        AND status =#{status}
      </if>
    </where>
  </sql>
  <!--分页查询纠错列表-->
  <select id="findAll" parameterType="map" resultMap="BaseResultMap">
    SELECT * from knowledge_review

    <include refid="sql_where"/>

    <if test="sort == null or sort == ''">
      ORDER BY create_date DESC
    </if>
    <if test="sort == 'examine_date'">
      ORDER BY examine_date ${order}
    </if>

    limit #{currPage},#{pageSize}
  </select>
  <!--获取知识元纠错总记录数-->
  <select id="total" resultType="int" parameterType="map">
    SELECT count(*) from knowledge_review

    <include refid="sql_where"/>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge_review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from knowledge_review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.trs.model.KnowledgeReviewWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge_review (id, create_user, manager, 
      knowledge_name, create_date, examine_date, 
      status, ip, text, 
      lcoation)
    values (#{id,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{manager,jdbcType=VARCHAR}, 
      #{knowledgeName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{examineDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{text,jdbcType=LONGVARCHAR}, 
      #{lcoation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trs.model.KnowledgeReviewWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="manager != null" >
        manager,
      </if>
      <if test="knowledgeName != null" >
        knowledge_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="examineDate != null" >
        examine_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="lcoation != null" >
        lcoation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeName != null" >
        #{knowledgeName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="examineDate != null" >
        #{examineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=LONGVARCHAR},
      </if>
      <if test="lcoation != null" >
        #{lcoation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trs.model.KnowledgeReviewWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_review
    <set >
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeName != null" >
        knowledge_name = #{knowledgeName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="examineDate != null" >
        examine_date = #{examineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
      <if test="lcoation != null" >
        lcoation = #{lcoation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.trs.model.KnowledgeReviewWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_review
    set create_user = #{createUser,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      knowledge_name = #{knowledgeName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      examine_date = #{examineDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      text = #{text,jdbcType=LONGVARCHAR},
      lcoation = #{lcoation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trs.model.KnowledgeReview" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge_review
    set create_user = #{createUser,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      knowledge_name = #{knowledgeName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      examine_date = #{examineDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
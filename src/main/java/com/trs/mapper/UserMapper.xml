<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trs.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.trs.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="gmt_create" property="gmtCreate" />
    <result column="gmt_modified" property="gmtModified" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="organizeid" jdbcType="INTEGER" property="organizeId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, pwd, realname, email, telephone, address, gmt_create, gmt_modified, 
    role_id, status,organizeid
  </sql>

  <sql id="sql_where">
    <where>
    <if test="search != null and search != ''">
      username LIKE "%"#{search}"%"
    </if>
    <if test="state != null and state != ''">
      AND status =#{state}
    </if>
    </where>
  </sql>

  <!--查询所有user-->
  <select id="listAllUsers" parameterType="map" resultMap="BaseResultMap">
    SELECT

    <include refid="Base_Column_List"/>
    from user

    <include refid="sql_where"/>

    <if test="sort == null or sort == ''">
      ORDER BY gmt_create DESC
    </if>
    <if test="sort == 'gmtCreate'">
      ORDER BY gmt_create ${order}
    </if>
    <if test="sort == 'gmtModified'">
      ORDER BY gmt_modified ${order}
    </if>
    limit #{currPage},#{pageSize}
  </select>

  <!--获取user的记录数-->
  <select id="total" parameterType="map" resultType="int">
    SELECT COUNT(*) FROM user
    <include refid="sql_where"/>
  </select>

  <!--修改账户状态-->
  <update id="changeStatus" parameterType="map">
    UPDATE user SET status=#{status}, gmt_modified=#{gmtModified} where id =#{id}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.trs.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (id, username, pwd, 
      realname, email, telephone, 
      address, gmt_create, gmt_modified, 
      role_id, status)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{gmtCreate}, #{gmtModified},
      #{roleId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.trs.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="organizeId != null">
        organizeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate},
      </if>
      <if test="gmtModified != null">
        #{gmtModified},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="organizeId != null">
        #{organizeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trs.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="organizeId != null">
        organizeid = #{organizeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trs.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set username = #{username,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate},
      gmt_modified = #{gmtModified},
      role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 查询用户 -->
  <select id="findUserByNameAndPwd" parameterType="map" resultMap="BaseResultMap">
      SELECT
        <include refid="Base_Column_List" />
      from user
      where username = #{userName} and pwd = #{pwd}
  </select>

  <!-- 通过用户名查询用户 -->
  <select id="findUserByName" parameterType="String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from user
    where username = #{name}
  </select>

  <!-- 通过角色ID查询用户 -->
  <select id="findUserByRoleId" parameterType="user" resultType="user">
    select
    <include refid="Base_Column_List" />
    from
    user
    where
    role_id = #{roleId} and id != #{id};
  </select>
</mapper>